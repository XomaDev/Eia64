let TRASH: String = "🗑️"
let HAPPY_RIGHT: String = "(> ^_^)>"
let HAPPY_LEFT: String = "<(^_^ <)"

fn generateSpaces(n: Int): String {
    auto spaces = ""
    for (auto x = 0, x < n, x++) {
        spaces = spaces + " "
    }
    return spaces
}

fn trash(text: String) {
    let size: Int = len(text)

    for (auto i = 0, i < size, i++) {
        let l: String = text[0]
        auto going_right = true

        auto left_space = 0
        auto right_space = 10 + i

        until (true) {
            println(TRASH,
                generateSpaces(left_space),
                if (going_right) HAPPY_RIGHT else l + HAPPY_LEFT,
                generateSpaces(right_space),
                text)
            sleep(500)

            if (going_right && left_space >= 10 + i) {
                going_right = false
                left_space = 10 + i
                right_space = 0

                auto newText = ""
                auto j = 1
                until (j < len(text)) {
                    newText = newText + text[j]
                    j++
                }
                text = newText
            } else if (!going_right && right_space >= 10 + i) {
                println(TRASH, HAPPY_LEFT, generateSpaces(10 + i + 1), text)
                sleep(500)
                break
            }
            if (going_right) {
                left_space++
                right_space--
            } else {
                left_space--
                right_space++
            }
        }
    }
}
until (true) {
    print("Enter a word: ")
    trash(readln())
}