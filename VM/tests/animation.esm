gen_spaces
    Load 51
    Str " "
    Add_Str
    Store 51

    Str_Len
    Load 50
    Int_Cmp
    Gnq gen_spaces
end

create_spaces
    # arg {50} for n spaces
    # {50} for resultant spaces
    Str " "
    Store 51
    Visit gen_spaces
end

init_conf
    # [0, 9] range for properties
    # Loading all the properties
    # Interval => 0
    # Trash Can => 1
    # Happy Right   => 2
    # Happy Left   => 3

    # Set interval to 500 ms
    Int 500
    Store 0
    Pop

    # Trash Symbol
    Str "ðŸ—‘"
    Store 1
    Pop_Str

    # Happy Right
    Str "(> ^_^)>"
    Store 2
    Pop_Str

    # Happy Left
    Str "<(^_^ <)"
    Store 3
    Pop_Str
end

iterate_char
    # get relevant char from text
    Load 10     # text
    Load 12     # char_i
    Char_At
    To_Ch

    Store 13    # store relevant char
    Print_Str Endl

    # going_right = true
    Int 1
    Store 14

    # setup left_space and right_space =
    Int 0
    Store 15    # left space (0)

    Int 10
    Load 12
    Add
    Store 16    # right space (10+i)


    # increment char_i
    Load 12
    Int 1
    Add
    Store 12

    Go char_loop
end

char_loop
    Load 12     # char_i
    Load 11     # text len
    Int_Cmp

    Gnq iterate_char
end

trash
    # [10, 19] for animation properties
    # arg {10} => text

    # {11} => text size
    # {12} => char_i
    # {13} => current letter
    # {14} => going right? initially true
    # {15} => left space, initially 0
    # {16} => right space, initially 10 + i

    # get and store text size
    Load 10
    Str_Len
    Store 11
    Pop

    # init char loop i
    Int 0
    Store 12
    Pop

    Visit char_loop
end

main
    Visit init_conf

    Str "Mea"
    Store 10
    Visit trash
end